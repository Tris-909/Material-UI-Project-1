{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\MaterialUI\\\\my-app\\\\src\\\\Components\\\\Estimate.js\";\nimport React from 'react';\nimport Lottie from 'react-lottie';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport check from \"../assets/check.svg\";\nimport send from \"../assets/send.svg\";\nimport software from \"../assets/software.svg\";\nimport mobile from \"../assets/mobile.svg\";\nimport website from \"../assets/website.svg\";\nimport backArrow from \"../assets/backArrow.svg\";\nimport forwardArrow from \"../assets/forwardArrow.svg\";\nimport backArrowDisabled from \"../assets/backArrowDisabled.svg\";\nimport forwardArrowDisabled from \"../assets/forwardArrowDisabled.svg\";\nimport camera from \"../assets/camera.svg\";\nimport upload from \"../assets/upload.svg\";\nimport person from \"../assets/person.svg\";\nimport persons from \"../assets/persons.svg\";\nimport info from \"../assets/info.svg\";\nimport bell from \"../assets/bell.svg\";\nimport users from \"../assets/users.svg\";\nimport iphone from \"../assets/iphone.svg\";\nimport gps from \"../assets/gps.svg\";\nimport customised from \"../assets/customized.svg\";\nimport data from \"../assets/data.svg\";\nimport android from \"../assets/android.svg\";\nimport globe from \"../assets/globe.svg\";\nimport biometrics from \"../assets/biometrics.svg\";\nimport estimateAnimation from '../animations/integrationAnimation/estimateAnimation/data.json';\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    width: '12em',\n    height: '10em'\n  },\n  estimateButton: { ...theme.typography.estimate,\n    borderRadius: 50,\n    backgroundColor: theme.palette.common.orange,\n    height: 50,\n    width: 225,\n    fontSize: '1.25rem',\n    marginTop: '3em',\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light\n    }\n  }\n}));\nconst defaultQuestions = [{\n  id: 1,\n  title: 'Which service are you interested in?',\n  active: true,\n  options: [{\n    id: 1,\n    title: \"Custome Software Development\",\n    subtitle: null,\n    icon: software,\n    iconAlt: 'three floating screen',\n    selected: false,\n    cost: 0\n  }, {\n    id: 2,\n    title: \"iOS/Android Development\",\n    subtitle: null,\n    icon: mobile,\n    iconAlt: 'mobile icon',\n    selected: false,\n    cost: 0\n  }, {\n    id: 3,\n    title: \"Web Development\",\n    subtitle: null,\n    icon: software,\n    iconAlt: 'web icon',\n    selected: false,\n    cost: 0\n  }]\n}];\nexport default function Estimate() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: estimateAnimation,\n    renderSetting: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    lg: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginTop: '2em',\n      marginLeft: '5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Estimate\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginRight: '10em',\n      maxWidth: '50em',\n      marginTop: '5.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Lottie, {\n    options: defaultOptions,\n    height: \"100%\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    lg: true,\n    style: {\n      marginRight: '2em',\n      marginBottom: '25em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, defaultQuestions.filter(question => question.active).map((question, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: \"center\",\n    style: {\n      fontWeight: 500,\n      fontSize: \"2.25em\",\n      marginTop: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, question.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    style: {\n      marginBottom: '2.5em'\n    },\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, question.subtitle)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, question.options.map(option => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      maxWidth: '12em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    style: {\n      marginBottom: \"1em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  }, option.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }, option.subtitle)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: option.icon,\n    alt: \"software icon\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    style: {\n      width: '15em',\n      marginTop: '3em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: backArrow,\n    alt: \"Back Arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: forwardArrow,\n    alt: \"Forward Arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.estimateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Get Estimate\"))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/MaterialUI/my-app/src/Components/Estimate.js"],"names":["React","Lottie","makeStyles","useTheme","Grid","Typography","Button","IconButton","estimateAnimation","useStyles","theme","icon","width","height","estimateButton","typography","estimate","borderRadius","backgroundColor","palette","common","orange","fontSize","marginTop","secondary","light","defaultQuestions","id","title","active","options","subtitle","software","iconAlt","selected","cost","mobile","Estimate","classes","defaultOptions","loop","autoplay","animationData","renderSetting","preserveAspectRatio","marginLeft","marginRight","maxWidth","marginBottom","filter","question","map","index","fontWeight","option","backArrow","forwardArrow"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport check from '../assets/check.svg';\r\nimport send from '../assets/send.svg';\r\nimport software from '../assets/software.svg';\r\nimport mobile from '../assets/mobile.svg';\r\nimport website from '../assets/website.svg';\r\nimport backArrow from '../assets/backArrow.svg';\r\nimport forwardArrow from '../assets/forwardArrow.svg';\r\nimport backArrowDisabled from '../assets/backArrowDisabled.svg';\r\nimport forwardArrowDisabled from '../assets/forwardArrowDisabled.svg';\r\nimport camera from '../assets/camera.svg';\r\nimport upload from '../assets/upload.svg';\r\nimport person from '../assets/person.svg';\r\nimport persons from '../assets/persons.svg';\r\nimport info from '../assets/info.svg';\r\nimport bell from '../assets/bell.svg';\r\nimport users from '../assets/users.svg';\r\nimport iphone from '../assets/iphone.svg';\r\nimport gps from '../assets/gps.svg';\r\nimport customised from '../assets/customized.svg';\r\nimport data from '../assets/data.svg';\r\nimport android from '../assets/android.svg';\r\nimport globe from '../assets/globe.svg';\r\nimport biometrics from '../assets/biometrics.svg';\r\n\r\nimport estimateAnimation from '../animations/integrationAnimation/estimateAnimation/data.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        width: '12em',\r\n        height: '10em'\r\n    },\r\n    estimateButton: {\r\n        ...theme.typography.estimate,\r\n        borderRadius: 50,\r\n        backgroundColor: theme.palette.common.orange,\r\n        height: 50,\r\n        width: 225,\r\n        fontSize: '1.25rem',\r\n        marginTop: '3em',\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.secondary.light\r\n        }    \r\n    }\r\n}));\r\n\r\nconst defaultQuestions = [{id:1, title: 'Which service are you interested in?', active: true, options: \r\n    [{id: 1, title: \"Custome Software Development\", subtitle: null, icon: software, iconAlt: 'three floating screen', selected: false, cost: 0},\r\n    {id: 2, title: \"iOS/Android Development\", subtitle: null, icon: mobile, iconAlt: 'mobile icon', selected: false, cost: 0},\r\n    {id: 3, title: \"Web Development\", subtitle: null, icon: software, iconAlt: 'web icon', selected: false, cost: 0}] \r\n}];\r\n\r\nexport default function Estimate() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: estimateAnimation,\r\n        renderSetting:  {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Grid container direction=\"row\">\r\n            \r\n            <Grid item container direction=\"column\" lg>\r\n                <Grid item style={{marginTop: '2em', marginLeft: '5em'}}>\r\n                    <Typography variant=\"h2\">Estimate</Typography>\r\n                </Grid>\r\n                <Grid item style={{marginRight: '10em', maxWidth: '50em', marginTop: '5.5em'}}>\r\n                    <Lottie options={defaultOptions} height=\"100%\" width=\"100%\"/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container direction=\"column\" alignItems=\"center\" lg style={{marginRight: '2em', marginBottom: '25em'}}>\r\n                {defaultQuestions.filter(question => question.active).map( (question, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h2\" align=\"center\" \r\n                                style={{fontWeight: 500, fontSize: \"2.25em\", marginTop: '1em'}}>\r\n                                    {question.title}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" align='center' style={{marginBottom: '2.5em'}} gutterBottom>\r\n                                    {question.subtitle}\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item container>\r\n                            {question.options.map((option) => (\r\n                                <Grid item container direction=\"column\" md>\r\n                                    <Grid item style={{maxWidth: '12em'}}>\r\n                                        <Typography variant=\"h6\" align=\"center\" style={{marginBottom: \"1em\"}}>\r\n                                            {option.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"caption\" align=\"center\">\r\n                                            {option.subtitle}\r\n                                        </Typography>   \r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <img src={option.icon} alt=\"software icon\" className={classes.icon}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                ))}\r\n                \r\n\r\n                \r\n\r\n                <Grid item container justify=\"space-between\" style={{width: '15em', marginTop: '3em'}}>\r\n                    <Grid item>\r\n                        <img src={backArrow} alt=\"Back Arrow\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <img src={forwardArrow} alt=\"Forward Arrow\" />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Button variant=\"contained\" className={classes.estimateButton}>Get Estimate</Button>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
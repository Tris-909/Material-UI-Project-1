{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\MaterialUI\\\\my-app\\\\src\\\\Components\\\\Estimate.js\";\nimport React, { useState } from 'react';\nimport Lottie from 'react-lottie';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { cloneDeep } from 'lodash';\nimport check from \"../assets/check.svg\";\nimport send from \"../assets/send.svg\";\nimport software from \"../assets/software.svg\";\nimport mobile from \"../assets/mobile.svg\";\nimport website from \"../assets/website.svg\";\nimport backArrow from \"../assets/backArrow.svg\";\nimport forwardArrow from \"../assets/forwardArrow.svg\";\nimport backArrowDisabled from \"../assets/backArrowDisabled.svg\";\nimport forwardArrowDisabled from \"../assets/forwardArrowDisabled.svg\";\nimport camera from \"../assets/camera.svg\";\nimport upload from \"../assets/upload.svg\";\nimport person from \"../assets/person.svg\";\nimport persons from \"../assets/persons.svg\";\nimport info from \"../assets/info.svg\";\nimport bell from \"../assets/bell.svg\";\nimport users from \"../assets/users.svg\";\nimport iphone from \"../assets/iphone.svg\";\nimport gps from \"../assets/gps.svg\";\nimport customized from \"../assets/customized.svg\";\nimport data from \"../assets/data.svg\";\nimport android from \"../assets/android.svg\";\nimport globe from \"../assets/globe.svg\";\nimport biometrics from \"../assets/biometrics.svg\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport estimateAnimation from '../animations/integrationAnimation/estimateAnimation/data.json';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    width: '12em',\n    height: '10em'\n  },\n  estimateButton: { ...theme.typography.estimate,\n    borderRadius: 50,\n    backgroundColor: theme.palette.common.orange,\n    height: 50,\n    width: 225,\n    fontSize: '1.25rem',\n    marginTop: '1em',\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light\n    }\n  },\n  Message: {\n    border: `2px solid ${theme.palette.common.blue}`,\n    borderRadius: 5\n  },\n  specialText: {\n    fontFamily: 'Raleway',\n    fontWeight: 700,\n    fontSize: '1.5rem',\n    color: theme.palette.common.orange\n  }\n}));\nconst defaultQuestions = [{\n  id: 1,\n  title: 'Which service are you interested in?',\n  active: true,\n  options: [{\n    id: 1,\n    title: \"Custom Software Development\",\n    subtitle: null,\n    icon: software,\n    iconAlt: 'three floating screen',\n    selected: false,\n    cost: 0\n  }, {\n    id: 2,\n    title: \"iOS/Android Development\",\n    subtitle: null,\n    icon: mobile,\n    iconAlt: 'mobile icon',\n    selected: false,\n    cost: 0\n  }, {\n    id: 3,\n    title: \"Web Development\",\n    subtitle: null,\n    icon: software,\n    iconAlt: 'web icon',\n    selected: false,\n    cost: 0\n  }]\n}];\nconst softwareQuestions = [{ ...defaultQuestions[0],\n  active: false\n}, {\n  id: 2,\n  title: \"Which platforms do you need supported?\",\n  subtitle: \"Select all that apply.\",\n  options: [{\n    id: 1,\n    title: \"Web Application\",\n    subtitle: null,\n    icon: website,\n    iconAlt: \"computer outline\",\n    selected: false,\n    cost: 100\n  }, {\n    id: 2,\n    title: \"iOS Application\",\n    subtitle: null,\n    icon: iphone,\n    iconAlt: \"outline of iphone\",\n    selected: false,\n    cost: 100\n  }, {\n    id: 3,\n    title: \"Android Application\",\n    subtitle: null,\n    icon: android,\n    iconAlt: \"outlines of android phone\",\n    selected: false,\n    cost: 100\n  }],\n  active: true\n}, {\n  id: 3,\n  title: \"Which features do you expect to use?\",\n  subtitle: \"Select all that apply.\",\n  options: [{\n    id: 1,\n    title: \"Photo/Video\",\n    subtitle: null,\n    icon: camera,\n    iconAlt: \"camera outline\",\n    selected: false,\n    cost: 25\n  }, {\n    id: 2,\n    title: \"GPS\",\n    subtitle: null,\n    icon: gps,\n    iconAlt: \"gps pin\",\n    selected: false,\n    cost: 25\n  }, {\n    id: 3,\n    title: \"File Transfer\",\n    subtitle: null,\n    icon: upload,\n    iconAlt: \"outline of cloud with arrow pointing up\",\n    selected: false,\n    cost: 25\n  }],\n  active: false\n}, {\n  id: 4,\n  title: \"Which features do you expect to use?\",\n  subtitle: \"Select all that apply.\",\n  options: [{\n    id: 1,\n    title: \"Users/Authentication\",\n    subtitle: null,\n    icon: users,\n    iconAlt: \"outline of a person with a plus sign\",\n    selected: false,\n    cost: 25\n  }, {\n    id: 2,\n    title: \"Biometrics\",\n    subtitle: null,\n    icon: biometrics,\n    iconAlt: \"fingerprint\",\n    selected: false,\n    cost: 25\n  }, {\n    id: 3,\n    title: \"Push Notifications\",\n    subtitle: null,\n    icon: bell,\n    iconAlt: \"outline of a bell\",\n    selected: false,\n    cost: 25\n  }],\n  active: false\n}, {\n  id: 5,\n  title: \"What type of custom features do you expect to need?\",\n  subtitle: \"Select one.\",\n  options: [{\n    id: 1,\n    title: \"Low Complexity\",\n    subtitle: \"(Informational)\",\n    icon: info,\n    iconAlt: \"'i' inside a circle\",\n    selected: false,\n    cost: 25\n  }, {\n    id: 2,\n    title: \"Medium Complexity\",\n    subtitle: \"(Interactive, Customizable, Realtime)\",\n    icon: customized,\n    iconAlt: \"two toggle switches\",\n    selected: false,\n    cost: 50\n  }, {\n    id: 3,\n    title: \"High Complexity\",\n    subtitle: \"(Data Modeling and Computation)\",\n    icon: data,\n    iconAlt: \"outline of line graph\",\n    selected: false,\n    cost: 100\n  }],\n  active: false\n}, {\n  id: 6,\n  title: \"How many users do you expect?\",\n  subtitle: \"Select one.\",\n  options: [{\n    id: 1,\n    title: \"0-10\",\n    subtitle: null,\n    icon: person,\n    iconAlt: \"person outline\",\n    selected: false,\n    cost: 1\n  }, {\n    id: 2,\n    title: \"10-100\",\n    subtitle: null,\n    icon: persons,\n    iconAlt: \"outline of two people\",\n    selected: false,\n    cost: 1.25\n  }, {\n    id: 3,\n    title: \"100+\",\n    subtitle: null,\n    icon: person,\n    iconAlt: \"outline of three people\",\n    selected: false,\n    cost: 1.5\n  }],\n  active: false\n}];\nconst websiteQuestions = [{ ...defaultQuestions[0],\n  active: false\n}, {\n  id: 2,\n  title: \"Which type of website are you wanting?\",\n  subtitle: \"Select one.\",\n  options: [{\n    id: 1,\n    title: \"Basic\",\n    subtitle: \"(Informational)\",\n    icon: info,\n    iconAlt: \"person outline\",\n    selected: false,\n    cost: 100\n  }, {\n    id: 2,\n    title: \"Interactive\",\n    subtitle: \"(Users, API's, Messaging)\",\n    icon: customized,\n    iconAlt: \"outline of two people\",\n    selected: false,\n    cost: 200\n  }, {\n    id: 3,\n    title: \"E-Commerce\",\n    subtitle: \"(Sales)\",\n    icon: globe,\n    iconAlt: \"outline of three people\",\n    selected: false,\n    cost: 250\n  }],\n  active: true\n}];\nexport default function Estimate() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [questions, setQuestions] = useState(defaultQuestions);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailHelper, setEmailHelper] = useState(\"\");\n  const [phone, setPhone] = useState('');\n  const [phoneHelper, setPhoneHelper] = useState(\"\");\n  const [message, setMessage] = useState('');\n  const [total, setTotal] = useState(0);\n  const [services, setServices] = useState([]);\n  const [platforms, setPlatform] = useState([]);\n  const [features, setFeatures] = useState([]);\n  const [customFeatures, setCustomFeatures] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: estimateAnimation,\n    renderSetting: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  const nextQuestion = () => {\n    const newQuestions = cloneDeep(questions);\n    const currentActived = newQuestions.filter(question => question.active);\n    const activedIndex = currentActived[0].id - 1;\n    const nextIndex = activedIndex + 1;\n    newQuestions[activedIndex] = { ...currentActived[0],\n      active: false\n    };\n    newQuestions[nextIndex] = { ...newQuestions[nextIndex],\n      active: true\n    };\n    setQuestions(newQuestions);\n  };\n\n  const prevQuestion = () => {\n    const newQuestions = cloneDeep(questions);\n    const currentActived = newQuestions.filter(question => question.active);\n    const activedIndex = currentActived[0].id - 1;\n    const nextIndex = activedIndex - 1;\n    newQuestions[activedIndex] = { ...currentActived[0],\n      active: false\n    };\n    newQuestions[nextIndex] = { ...newQuestions[nextIndex],\n      active: true\n    };\n    setQuestions(newQuestions);\n  };\n\n  const resetChoices = () => {\n    setTotal(0);\n    setPlatform([]);\n    setFeatures([]);\n    setCustomFeatures(\"\");\n    setUsers(\"\");\n  };\n\n  const handlerSelect = id => {\n    const newQuestions = cloneDeep(questions);\n    const currentActive = newQuestions.filter(question => question.active);\n    const activeIndex = currentActive[0].id - 1;\n    const newSelected = newQuestions[activeIndex].options[id - 1];\n    const prevSelected = currentActive[0].options.filter(option => option.selected);\n\n    switch (currentActive[0].subtitle) {\n      case 'Select one.':\n        if (prevSelected[0]) {\n          prevSelected[0].selected = !prevSelected[0].selected;\n        }\n\n        newSelected.selected = !newSelected.selected;\n        break;\n\n      default:\n        newSelected.selected = !newSelected.selected;\n        break;\n    }\n\n    switch (newSelected.title) {\n      case 'Custom Software Development':\n        setQuestions(softwareQuestions);\n        setServices(newSelected.title);\n        resetChoices();\n        break;\n\n      case 'iOS/Android Development':\n        setQuestions(softwareQuestions);\n        setServices(newSelected.title);\n        resetChoices();\n        break;\n\n      case 'Web Development':\n        setQuestions(websiteQuestions);\n        setServices(newSelected.title);\n        resetChoices();\n        break;\n\n      default:\n        setQuestions(newQuestions);\n    }\n  };\n\n  const onChange = event => {\n    let valid;\n\n    switch (event.target.id) {\n      case 'email':\n        setEmail(event.target.value);\n        valid = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(event.target.value);\n\n        if (!valid) {\n          setEmailHelper(\"Invalid Email\");\n        } else {\n          setEmailHelper(\"\");\n        }\n\n        break;\n\n      case 'phone':\n        setPhone(event.target.value);\n        valid = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/.test(event.target.value);\n\n        if (!valid) {\n          setPhoneHelper(\"Invalid PhoneNumber\");\n        } else {\n          setPhoneHelper('');\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onNameChangeHandler = event => {\n    setName(event.target.value);\n  };\n\n  const onMessageChangeHandler = event => {\n    setMessage(event.target.value);\n  };\n\n  const navigationPreviousDisabled = () => {\n    const currentActive = questions.filter(question => question.active);\n\n    if (currentActive[0].id === 1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const navigationForwardDisabled = () => {\n    const currentActive = questions.filter(question => question.active);\n\n    if (currentActive[0].id === questions[questions.length - 1].id) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const getTotal = () => {\n    let cost = 0;\n    const selections = questions.map(question => question.options.filter(option => option.selected)).filter(question => question.length > 0);\n    selections.map(options => options.map(option => cost += option.cost));\n\n    if (questions.length > 2) {\n      const userCost = questions.filter(question => question.title === 'How many users do you expect?').map(question => question.options.filter(option => option.selected))[0][0];\n      setUsers(userCost.title);\n      cost -= userCost.cost;\n      cost *= userCost.cost;\n    }\n\n    setTotal(cost);\n  };\n\n  const getPlatform = () => {\n    let newPlatforms = [];\n\n    if (questions.length > 2) {\n      questions.filter(question => question.title === 'Which platforms do you need supported?').map(question => question.options.filter(option => option.selected))[0].map(option => newPlatforms.push(option.title));\n      console.log(newPlatforms);\n      setPlatform(newPlatforms);\n    }\n  };\n\n  const getFeatures = () => {\n    let newFeatures = [];\n\n    if (questions.length > 2) {\n      questions.filter(question => question.title === \"Which features do you expect to use?\").map(question => question.options.filter(option => option.selected)).map(option => option.map(newFeature => newFeatures.push(newFeature.title)));\n      console.log(newFeatures);\n      setFeatures(newFeatures);\n    }\n  };\n\n  const getCustomFeatures = () => {\n    if (questions.length > 2) {\n      const newCustomFeatures = questions.filter(question => question.title === 'What type of custom features do you expect to need?').map(question => question.options.filter(option => option.selected))[0][0].title;\n      setCustomFeatures(newCustomFeatures);\n    }\n  };\n\n  const softwareSelection = /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    style: {\n      marginBottom: \"1.25em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: check,\n    alt: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 35\n    }\n  }, \"You want : \", services, \" for\", platforms.length > 0 ? `for ${//if only web application is selected...\n  platforms.indexOf(\"Web Application\") > -1 && platforms.length === 1 ? //then finish sentence here\n  \"a Web Application.\" : //otherwise, if web application and another platform is selected...\n  platforms.indexOf(\"Web Application\") > -1 && platforms.length === 2 ? //then finish the sentence here\n  `a Web Application and an ${platforms[1]}.` : //otherwise, if only one platform is selected which isn't web application...\n  platforms.length === 1 ? //then finish the sentence here\n  `an ${platforms[0]}` : //otherwise, if other two options are selected...\n  platforms.length === 2 ? //then finish the sentence here\n  \"an iOS Application and an Android Application.\" : //otherwise if all three are selected...\n  platforms.length === 3 ? //then finish the sentence here\n  \"a Web Application, an iOS Application, and an Android Application.\" : null}` : null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    style: {\n      marginBottom: \"1.25em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: check,\n    alt: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 35\n    }\n  }, \"with \", features.length > 0 ? //...and there's only 1...\n  features.length === 1 ? //then end the sentence here\n  `${features[0]}.` : //otherwise, if there are two features...\n  features.length === 2 ? //...then end the sentence here\n  `${features[0]} and ${features[1]}.` : //otherwise, if there are three or more features...\n  features //filter out the very last feature...\n  .filter((feature, index) => index !== features.length - 1) //and for those features return their name...\n  .map((feature, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 31\n    }\n  }, `${feature}, `)) : null, features.length > 0 && features.length !== 1 && features.length !== 2 ? //...and then finally add the last feature with 'and' in front of it\n  ` and ${features[features.length - 1]}.` : null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: check,\n    alt: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 35\n    }\n  }, \"The custom features will be of \", customFeatures.toLowerCase(), \" \", `, and the project will be used by about ${users} users.`))));\n\n  const getCategory = () => {\n    if (questions.length === 2) {\n      const newCategory = questions.filter(question => question.title === \"Which type of website are you wanting?\")[0].options.filter(option => option.selected)[0].title;\n      setCategory(newCategory);\n    }\n  };\n\n  const websiteSelection = /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: check,\n    alt: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 11\n    }\n  }, \"You want \", category === 'Basic' ? \" a Basic Website\" : `an ${category} Website.`))));\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    lg: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginTop: '2em',\n      marginLeft: matchesMD ? 0 : '5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: matchesMD ? \"center\" : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 21\n    }\n  }, \"Estimate\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    alignSelf: \"center\",\n    style: {\n      marginRight: matchesMD ? 0 : '10em',\n      width: matchesMD ? '70%' : '50em',\n      marginTop: matchesMD ? matchesSM ? '1.5em' : '3em' : '5.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Lottie, {\n    options: defaultOptions,\n    height: \"100%\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    lg: true,\n    style: {\n      marginRight: '2em',\n      marginBottom: '25em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }\n  }, questions.filter(question => question.active).map((question, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: \"center\",\n    style: {\n      fontWeight: 500,\n      fontSize: \"2.25em\",\n      marginTop: '1em',\n      lineHeight: 1.25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 29\n    }\n  }, question.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    style: {\n      marginBottom: '2.5em'\n    },\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 29\n    }\n  }, question.subtitle)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 25\n    }\n  }, question.options.map(option => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    md: true,\n    key: option.id,\n    component: Button,\n    onClick: () => handlerSelect(option.id),\n    style: {\n      display: 'grid',\n      textTransform: 'none',\n      borderRadius: 0,\n      backgroundColor: option.selected ? theme.palette.secondary.main : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      maxWidth: '14em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    style: {\n      marginBottom: \"1em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 37\n    }\n  }, option.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 37\n    }\n  }, option.subtitle)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: option.icon,\n    alt: option.iconAlt,\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    style: {\n      width: '15em',\n      marginTop: '3em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    disabled: navigationPreviousDisabled(),\n    onClick: prevQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: navigationPreviousDisabled() ? backArrowDisabled : backArrow,\n    alt: \"Back Arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    disabled: navigationForwardDisabled(),\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: navigationForwardDisabled() ? forwardArrowDisabled : forwardArrow,\n    alt: \"Forward Arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setDialogOpen(true);\n      getTotal();\n      getPlatform();\n      getFeatures();\n      getCustomFeatures();\n      getCategory();\n    },\n    className: classes.estimateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 21\n    }\n  }, \"Get Estimate\"))), /*#__PURE__*/React.createElement(Dialog, {\n    open: dialogOpen,\n    onClose: () => setDialogOpen(false),\n    style: {\n      zIndex: 1302\n    },\n    fullWidth: true,\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    style: {\n      overflow: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginTop: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 23\n    }\n  }, \"Estimate\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-evenly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    md: 7,\n    style: {\n      maxWidth: '20em',\n      marginBottom: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginBottom: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Name\",\n    fullWidth: true,\n    id: \"Name\",\n    value: name,\n    onChange: e => onNameChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginBottom: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    error: emailHelper.length !== 0,\n    helperText: emailHelper,\n    fullWidth: true,\n    id: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginBottom: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Phone\",\n    error: phoneHelper.length !== 0,\n    helperText: phoneHelper,\n    fullWidth: true,\n    id: \"phone\",\n    value: phone,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      Width: matchesSM ? '100%' : \"20em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: message,\n    multiline: true,\n    rows: 10,\n    id: \"message\",\n    onChange: e => onMessageChangeHandler(e),\n    className: classes.Message,\n    fullWidth: true,\n    InputProps: {\n      disableUnderline: true\n    },\n    style: {\n      marginTop: '2em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 31\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    md: 5,\n    style: {\n      maxWidth: '30em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 27\n    }\n  }, questions.length > 2 ? softwareSelection : websiteSelection), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 31\n    }\n  }, \"We can create this digital solution for an estimated : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.specialText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 88\n    }\n  }, \"$\", total.toFixed(2))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 31\n    }\n  }, \"Fill out your name, phone number and email, place your request, and we'll get back to you with details moving forward and a final price.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.estimateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 29\n    }\n  }, \"Place Request\", /*#__PURE__*/React.createElement(\"img\", {\n    src: send,\n    alt: \"paper airplane\",\n    style: {\n      marginLeft: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 31\n    }\n  }))))))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/MaterialUI/my-app/src/Components/Estimate.js"],"names":["React","useState","Lottie","makeStyles","useTheme","Grid","Typography","Button","IconButton","cloneDeep","Dialog","DialogContent","estimateAnimation","useMediaQuery","TextField","useStyles","theme","icon","width","height","estimateButton","typography","estimate","borderRadius","backgroundColor","palette","common","orange","fontSize","marginTop","secondary","light","Message","border","blue","specialText","fontFamily","fontWeight","color","defaultQuestions","id","title","active","options","subtitle","software","iconAlt","selected","cost","mobile","softwareQuestions","website","iphone","android","camera","gps","upload","users","biometrics","bell","info","customized","data","person","persons","websiteQuestions","globe","Estimate","classes","matchesMD","breakpoints","down","matchesSM","matchesXS","questions","setQuestions","dialogOpen","setDialogOpen","name","setName","email","setEmail","emailHelper","setEmailHelper","phone","setPhone","phoneHelper","setPhoneHelper","message","setMessage","total","setTotal","services","setServices","platforms","setPlatform","features","setFeatures","customFeatures","setCustomFeatures","category","setCategory","setUsers","defaultOptions","loop","autoplay","animationData","renderSetting","preserveAspectRatio","nextQuestion","newQuestions","currentActived","filter","question","activedIndex","nextIndex","prevQuestion","resetChoices","handlerSelect","currentActive","activeIndex","newSelected","prevSelected","option","onChange","event","valid","target","value","test","onNameChangeHandler","onMessageChangeHandler","navigationPreviousDisabled","navigationForwardDisabled","length","getTotal","selections","map","userCost","getPlatform","newPlatforms","push","console","log","getFeatures","newFeatures","newFeature","getCustomFeatures","newCustomFeatures","softwareSelection","marginBottom","check","indexOf","feature","index","toLowerCase","getCategory","newCategory","websiteSelection","marginLeft","undefined","marginRight","lineHeight","display","textTransform","main","maxWidth","backArrowDisabled","backArrow","forwardArrowDisabled","forwardArrow","zIndex","overflow","e","Width","disableUnderline","toFixed","send"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {cloneDeep} from 'lodash';\r\nimport check from '../assets/check.svg';\r\nimport send from '../assets/send.svg';\r\nimport software from '../assets/software.svg';\r\nimport mobile from '../assets/mobile.svg';\r\nimport website from '../assets/website.svg';\r\nimport backArrow from '../assets/backArrow.svg';\r\nimport forwardArrow from '../assets/forwardArrow.svg';\r\nimport backArrowDisabled from '../assets/backArrowDisabled.svg';\r\nimport forwardArrowDisabled from '../assets/forwardArrowDisabled.svg';\r\nimport camera from '../assets/camera.svg';\r\nimport upload from '../assets/upload.svg';\r\nimport person from '../assets/person.svg';\r\nimport persons from '../assets/persons.svg';\r\nimport info from '../assets/info.svg';\r\nimport bell from '../assets/bell.svg';\r\nimport users from '../assets/users.svg';\r\nimport iphone from '../assets/iphone.svg';\r\nimport gps from '../assets/gps.svg';\r\nimport customized from '../assets/customized.svg';\r\nimport data from '../assets/data.svg';\r\nimport android from '../assets/android.svg';\r\nimport globe from '../assets/globe.svg';\r\nimport biometrics from '../assets/biometrics.svg';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport estimateAnimation from '../animations/integrationAnimation/estimateAnimation/data.json';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        width: '12em',\r\n        height: '10em'\r\n    },\r\n    estimateButton: {\r\n        ...theme.typography.estimate,\r\n        borderRadius: 50,\r\n        backgroundColor: theme.palette.common.orange,\r\n        height: 50,\r\n        width: 225,\r\n        fontSize: '1.25rem',\r\n        marginTop: '1em',\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.secondary.light\r\n        }    \r\n    },\r\n    Message: {\r\n      border: `2px solid ${theme.palette.common.blue}`,\r\n      \r\n      borderRadius: 5\r\n    },\r\n    specialText: {\r\n      fontFamily: 'Raleway',\r\n      fontWeight: 700,\r\n      fontSize: '1.5rem',\r\n      color: theme.palette.common.orange\r\n    }\r\n}));\r\n\r\nconst defaultQuestions = [\r\n  {\r\n    id: 1, \r\n    title: 'Which service are you interested in?', \r\n    active: true, \r\n    options: \r\n    [\r\n      {\r\n        id: 1, \r\n        title: \"Custom Software Development\", \r\n        subtitle: null, \r\n        icon: software, \r\n        iconAlt: 'three floating screen', \r\n        selected: false, \r\n        cost: 0},\r\n      {\r\n        id: 2, \r\n        title: \"iOS/Android Development\", \r\n        subtitle: null, \r\n        icon: mobile, \r\n        iconAlt: 'mobile icon', \r\n        selected: false, \r\n        cost: 0},\r\n      {\r\n        id: 3, \r\n        title: \"Web Development\", \r\n        subtitle: null, \r\n        icon: software, \r\n        iconAlt: 'web icon', \r\n        selected: false, \r\n        cost: 0\r\n      }\r\n    ] \r\n}];\r\n\r\nconst softwareQuestions = [\r\n    { ...defaultQuestions[0], active: false },\r\n    {\r\n      id: 2,\r\n      title: \"Which platforms do you need supported?\",\r\n      subtitle: \"Select all that apply.\",\r\n      options: [\r\n        {\r\n          id: 1,\r\n          title: \"Web Application\",\r\n          subtitle: null,\r\n          icon: website,\r\n          iconAlt: \"computer outline\",\r\n          selected: false,\r\n          cost: 100\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"iOS Application\",\r\n          subtitle: null,\r\n          icon: iphone,\r\n          iconAlt: \"outline of iphone\",\r\n          selected: false,\r\n          cost: 100\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"Android Application\",\r\n          subtitle: null,\r\n          icon: android,\r\n          iconAlt: \"outlines of android phone\",\r\n          selected: false,\r\n          cost: 100\r\n        }\r\n      ],\r\n      active: true\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Which features do you expect to use?\",\r\n      subtitle: \"Select all that apply.\",\r\n      options: [\r\n        {\r\n          id: 1,\r\n          title: \"Photo/Video\",\r\n          subtitle: null,\r\n          icon: camera,\r\n          iconAlt: \"camera outline\",\r\n          selected: false,\r\n          cost: 25\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"GPS\",\r\n          subtitle: null,\r\n          icon: gps,\r\n          iconAlt: \"gps pin\",\r\n          selected: false,\r\n          cost: 25\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"File Transfer\",\r\n          subtitle: null,\r\n          icon: upload,\r\n          iconAlt: \"outline of cloud with arrow pointing up\",\r\n          selected: false,\r\n          cost: 25\r\n        }\r\n      ],\r\n      active: false\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Which features do you expect to use?\",\r\n      subtitle: \"Select all that apply.\",\r\n      options: [\r\n        {\r\n          id: 1,\r\n          title: \"Users/Authentication\",\r\n          subtitle: null,\r\n          icon: users,\r\n          iconAlt: \"outline of a person with a plus sign\",\r\n          selected: false,\r\n          cost: 25\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Biometrics\",\r\n          subtitle: null,\r\n          icon: biometrics,\r\n          iconAlt: \"fingerprint\",\r\n          selected: false,\r\n          cost: 25\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"Push Notifications\",\r\n          subtitle: null,\r\n          icon: bell,\r\n          iconAlt: \"outline of a bell\",\r\n          selected: false,\r\n          cost: 25\r\n        }\r\n      ],\r\n      active: false\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"What type of custom features do you expect to need?\",\r\n      subtitle: \"Select one.\",\r\n      options: [\r\n        {\r\n          id: 1,\r\n          title: \"Low Complexity\",\r\n          subtitle: \"(Informational)\",\r\n          icon: info,\r\n          iconAlt: \"'i' inside a circle\",\r\n          selected: false,\r\n          cost: 25\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Medium Complexity\",\r\n          subtitle: \"(Interactive, Customizable, Realtime)\",\r\n          icon: customized,\r\n          iconAlt: \"two toggle switches\",\r\n          selected: false,\r\n          cost: 50\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"High Complexity\",\r\n          subtitle: \"(Data Modeling and Computation)\",\r\n          icon: data,\r\n          iconAlt: \"outline of line graph\",\r\n          selected: false,\r\n          cost: 100\r\n        }\r\n      ],\r\n      active: false\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"How many users do you expect?\",\r\n      subtitle: \"Select one.\",\r\n      options: [\r\n        {\r\n          id: 1,\r\n          title: \"0-10\",\r\n          subtitle: null,\r\n          icon: person,\r\n          iconAlt: \"person outline\",\r\n          selected: false,\r\n          cost: 1\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"10-100\",\r\n          subtitle: null,\r\n          icon: persons,\r\n          iconAlt: \"outline of two people\",\r\n          selected: false,\r\n          cost: 1.25\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"100+\",\r\n          subtitle: null,\r\n          icon: person,\r\n          iconAlt: \"outline of three people\",\r\n          selected: false,\r\n          cost: 1.5\r\n        }\r\n      ],\r\n      active: false\r\n    }\r\n  ];\r\n  \r\n  \r\n  const websiteQuestions = [\r\n    { ...defaultQuestions[0], active: false },\r\n    {\r\n      id: 2,\r\n      title: \"Which type of website are you wanting?\",\r\n      subtitle: \"Select one.\",\r\n      options: [\r\n        {\r\n          id: 1,\r\n          title: \"Basic\",\r\n          subtitle: \"(Informational)\",\r\n          icon: info,\r\n          iconAlt: \"person outline\",\r\n          selected: false,\r\n          cost: 100\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Interactive\",\r\n          subtitle: \"(Users, API's, Messaging)\",\r\n          icon: customized,\r\n          iconAlt: \"outline of two people\",\r\n          selected: false,\r\n          cost: 200\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"E-Commerce\",\r\n          subtitle: \"(Sales)\",\r\n          icon: globe,\r\n          iconAlt: \"outline of three people\",\r\n          selected: false,\r\n          cost: 250\r\n        }\r\n      ],\r\n      active: true\r\n    }\r\n  ];\r\n  \r\n\r\nexport default function Estimate() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n    const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n    const [questions, setQuestions] = useState(defaultQuestions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [name,setName] = useState('');\r\n\r\n    const [email,setEmail] = useState('');\r\n    const [emailHelper,setEmailHelper] = useState(\"\");\r\n\r\n    const [phone,setPhone] = useState(''); \r\n    const [phoneHelper,setPhoneHelper] = useState(\"\");\r\n\r\n    const [message, setMessage] = useState('');\r\n    \r\n    const [total, setTotal] = useState(0);\r\n    const [services, setServices] = useState([]);\r\n    const [platforms, setPlatform] = useState([]);\r\n    const [features, setFeatures] = useState([]);\r\n    const [customFeatures, setCustomFeatures] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [users, setUsers] = useState(\"\"); \r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: estimateAnimation,\r\n        renderSetting:  {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n      const newQuestions = cloneDeep(questions);\r\n      const currentActived = newQuestions.filter(question => question.active);\r\n      const activedIndex = currentActived[0].id - 1;\r\n      const nextIndex =  activedIndex + 1;\r\n      newQuestions[activedIndex] = {...currentActived[0], active: false}\r\n      newQuestions[nextIndex] = {...newQuestions[nextIndex], active: true} \r\n      setQuestions(newQuestions);\r\n    } \r\n\r\n    const prevQuestion = () => {\r\n      const newQuestions = cloneDeep(questions);\r\n      const currentActived = newQuestions.filter(question => question.active);\r\n      const activedIndex = currentActived[0].id - 1;\r\n      const nextIndex =  activedIndex - 1;\r\n      newQuestions[activedIndex] = {...currentActived[0], active: false}\r\n      newQuestions[nextIndex] = {...newQuestions[nextIndex], active: true} \r\n      setQuestions(newQuestions);\r\n    }\r\n\r\n    const resetChoices = () => {\r\n      setTotal(0);\r\n      setPlatform([]);\r\n      setFeatures([]);\r\n      setCustomFeatures(\"\");\r\n      setUsers(\"\");\r\n    }\r\n\r\n    const handlerSelect = (id) => {\r\n      const newQuestions = cloneDeep(questions);\r\n      const currentActive = newQuestions.filter(question => question.active);\r\n      const activeIndex = currentActive[0].id - 1;\r\n\r\n      const newSelected = newQuestions[activeIndex].options[id-1];\r\n      const prevSelected = currentActive[0].options.filter(option => option.selected);\r\n\r\n      switch(currentActive[0].subtitle) {\r\n        case'Select one.':\r\n          if (prevSelected[0]) {\r\n            prevSelected[0].selected = !prevSelected[0].selected;\r\n          } \r\n          newSelected.selected = !newSelected.selected;\r\n          break;\r\n        default: \r\n          newSelected.selected = !newSelected.selected;\r\n          break;\r\n      }\r\n\r\n      switch(newSelected.title) {\r\n        case 'Custom Software Development': \r\n          setQuestions(softwareQuestions);\r\n          setServices(newSelected.title);\r\n\r\n          resetChoices();\r\n\r\n          break;\r\n        case 'iOS/Android Development':\r\n          setQuestions(softwareQuestions);\r\n          setServices(newSelected.title);\r\n\r\n          resetChoices();\r\n\r\n          break;\r\n        case 'Web Development':\r\n          setQuestions(websiteQuestions);\r\n          setServices(newSelected.title);\r\n\r\n          resetChoices(); \r\n\r\n          break;\r\n        default: \r\n          setQuestions(newQuestions);\r\n      }\r\n    }\r\n\r\n    const onChange = event => {\r\n      let valid;\r\n\r\n      switch(event.target.id) {\r\n          case'email':\r\n              setEmail(event.target.value);\r\n              valid = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(event.target.value);\r\n              if (!valid) {\r\n                  setEmailHelper(\"Invalid Email\");\r\n              } else {\r\n                  setEmailHelper(\"\");\r\n              }\r\n\r\n              break;\r\n          case('phone'): \r\n              setPhone(event.target.value);\r\n              valid = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/.test(event.target.value);\r\n              if (!valid) {\r\n                  setPhoneHelper(\"Invalid PhoneNumber\");\r\n              } else {\r\n                  setPhoneHelper('');\r\n              }\r\n              break;\r\n          default: \r\n              break;\r\n      }\r\n    }\r\n\r\n    const onNameChangeHandler = (event) => {\r\n      setName(event.target.value);\r\n    }\r\n\r\n    const onMessageChangeHandler = (event) => {\r\n      setMessage(event.target.value);\r\n    }\r\n\r\n    const navigationPreviousDisabled = () => {\r\n      const currentActive = questions.filter(question => question.active);\r\n      if (currentActive[0].id === 1) { \r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    const navigationForwardDisabled = () => {\r\n      const currentActive = questions.filter(question => question.active);\r\n      if (currentActive[0].id === questions[questions.length-1].id) { \r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    const getTotal = () => {\r\n      let cost = 0;\r\n      const selections = questions.map(question => question.options.filter(option => option.selected)).filter(question => question.length > 0);\r\n      selections.map(options => options.map(option => cost += option.cost));\r\n      if (questions.length > 2) {\r\n        const userCost = questions.filter(question => question.title === 'How many users do you expect?').map(question => question.options.filter(option => option.selected))[0][0];\r\n        \r\n        setUsers(userCost.title);\r\n        cost -= userCost.cost;\r\n        cost *= userCost.cost;\r\n      }\r\n      setTotal(cost); \r\n    }\r\n\r\n    const getPlatform = () => {\r\n      let newPlatforms = [];\r\n      if (questions.length > 2) { \r\n       questions.filter(question => question.title === 'Which platforms do you need supported?')\r\n                .map(question => question.options.filter(option => option.selected))[0].map(option => newPlatforms.push(option.title));\r\n      console.log(newPlatforms);\r\n      setPlatform(newPlatforms);\r\n      }\r\n    }\r\n\r\n    const getFeatures = () => {\r\n      let newFeatures = [];\r\n      if (questions.length > 2) {\r\n        questions.filter(question => question.title === \"Which features do you expect to use?\")\r\n                .map(question => question.options.filter(option => option.selected))\r\n                .map(option => option.map(newFeature => newFeatures.push(newFeature.title)));\r\n      console.log(newFeatures);\r\n      setFeatures(newFeatures);\r\n      }\r\n    }\r\n\r\n    const getCustomFeatures = () => {\r\n      if (questions.length > 2) {\r\n        const newCustomFeatures = questions.filter(question => question.title === 'What type of custom features do you expect to need?')\r\n                                        .map(question => question.options.filter(option => option.selected))[0][0].title;\r\n        setCustomFeatures(newCustomFeatures);\r\n      }\r\n    }\r\n\r\n    const softwareSelection = (\r\n      <Grid container direction=\"column\">\r\n                              <Grid item container alignItems=\"center\" style={{marginBottom:  \"1.25em\"}}>\r\n                                <Grid item xs={2}>\r\n                                  <img src={check} alt=\"checkmark\" />\r\n                                </Grid>\r\n                                <Grid item xs={10}>\r\n                                  <Typography variant=\"body1\">\r\n                                    You want : {services} for\r\n                                    {platforms.length > 0 ? `for ${\r\n                              //if only web application is selected...\r\n                              platforms.indexOf(\"Web Application\") > -1 &&\r\n                              platforms.length === 1\r\n                                ? //then finish sentence here\r\n                                  \"a Web Application.\"\r\n                                : //otherwise, if web application and another platform is selected...\r\n                                platforms.indexOf(\"Web Application\") > -1 &&\r\n                                  platforms.length === 2\r\n                                ? //then finish the sentence here\r\n                                  `a Web Application and an ${platforms[1]}.`\r\n                                : //otherwise, if only one platform is selected which isn't web application...\r\n                                platforms.length === 1\r\n                                ? //then finish the sentence here\r\n                                  `an ${platforms[0]}`\r\n                                : //otherwise, if other two options are selected...\r\n                                platforms.length === 2\r\n                                ? //then finish the sentence here\r\n                                  \"an iOS Application and an Android Application.\"\r\n                                : //otherwise if all three are selected...\r\n                                platforms.length === 3\r\n                                ? //then finish the sentence here\r\n                                  \"a Web Application, an iOS Application, and an Android Application.\"\r\n                                : null\r\n                            }` : null}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n\r\n                              <Grid item container alignItems=\"center\" style={{marginBottom:  \"1.25em\"}}>\r\n                                <Grid item xs={2}>\r\n                                  <img src={check} alt=\"checkmark\" />\r\n                                </Grid>\r\n                                <Grid item xs={10}>\r\n                                  <Typography variant=\"body1\">\r\n                                  {\"with \"}\r\n                        {/* if we have features... */}\r\n                        {features.length > 0\r\n                          ? //...and there's only 1...\r\n                            features.length === 1\r\n                              ? //then end the sentence here\r\n                              `${features[0]}.`\r\n                              : //otherwise, if there are two features...\r\n                            features.length === 2\r\n                              ? //...then end the sentence here\r\n                              `${features[0]} and ${features[1]}.`\r\n                              : //otherwise, if there are three or more features...\r\n                              features\r\n                            //filter out the very last feature...\r\n                            .filter(\r\n                              (feature, index) =>\r\n                              index !== features.length - 1\r\n                            )\r\n                            //and for those features return their name...\r\n                            .map((feature, index) => (\r\n                              <span key={index}>{`${feature}, `}</span>\r\n                            ))\r\n                          : null}\r\n                        {features.length > 0 &&\r\n                          features.length !== 1 &&\r\n                          features.length !== 2\r\n                            ? //...and then finally add the last feature with 'and' in front of it\r\n                            ` and ${features[features.length - 1]}.`\r\n                            : null}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n\r\n                              <Grid item container alignItems=\"center\">\r\n                                <Grid item  xs={2}>\r\n                                  <img src={check} alt=\"checkmark\" />\r\n                                </Grid>\r\n                                <Grid item xs={10}>\r\n                                  <Typography variant=\"body1\">\r\n                                    The custom features will be of {customFeatures.toLowerCase()} {`, and the project will be used by about ${users} users.`}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n\r\n                            </Grid>\r\n\r\n    );\r\n\r\n    const getCategory = () => {\r\n      if (questions.length === 2) {\r\n        const newCategory = questions.filter(question => question.title === \"Which type of website are you wanting?\")[0].options.filter(option => option.selected)[0].title;\r\n        setCategory(newCategory);\r\n      }\r\n    }\r\n\r\n    const websiteSelection = (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container alignItems=\"center\">\r\n        <Grid item xs={2}>\r\n          <img src={check} alt=\"checkmark\" />\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <Typography variant=\"body1\">\r\n            You want {category === 'Basic' ? \" a Basic Website\" : `an ${category} Website.`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n\r\n    return(\r\n        <Grid container direction=\"row\">\r\n            \r\n            <Grid item container direction=\"column\" lg justify=\"center\" alignItems=\"center\">\r\n                <Grid item style={{marginTop: '2em', marginLeft: matchesMD ? 0 : '5em'}}>\r\n                    <Typography variant=\"h2\" align={matchesMD ? \"center\" : undefined}>Estimate</Typography>\r\n                </Grid>\r\n                <Grid item alignSelf=\"center\" style={{marginRight:matchesMD ? 0 : '10em', width: matchesMD ? '70%' : '50em', marginTop: matchesMD ? matchesSM ? '1.5em' : '3em' : '5.5em'}}>\r\n                    <Lottie options={defaultOptions} height=\"100%\" width=\"100%\"/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container direction=\"column\" alignItems=\"center\" lg style={{marginRight: '2em', marginBottom: '25em'}}>\r\n                {questions.filter(question => question.active).map( (question, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h2\" align=\"center\" \r\n                                style={{fontWeight: 500, fontSize: \"2.25em\", marginTop: '1em', lineHeight: 1.25}}>\r\n                                    {question.title}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" align='center' style={{marginBottom: '2.5em'}} gutterBottom>\r\n                                    {question.subtitle}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item container>\r\n                            {question.options.map((option) => (\r\n                              <Grid \r\n                                item container \r\n                                direction=\"column\" \r\n                                md key={option.id} \r\n                                component={Button}\r\n                                onClick={() => handlerSelect(option.id)}\r\n                                style={{display: 'grid', textTransform: 'none', borderRadius: 0,backgroundColor: option.selected ? theme.palette.secondary.main : undefined}}>\r\n                                <Grid item style={{maxWidth: '14em'}}>\r\n                                    <Typography variant=\"h6\" align=\"center\" style={{marginBottom: \"1em\"}}>\r\n                                        {option.title}\r\n                                    </Typography>\r\n                                    <Typography variant=\"caption\" align=\"center\">\r\n                                        {option.subtitle}\r\n                                    </Typography>   \r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={option.icon} alt={option.iconAlt} className={classes.icon}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                              ))}\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n                <Grid item container justify=\"space-between\" style={{width: '15em', marginTop: '3em'}}>\r\n                    <Grid item>\r\n                      <IconButton disabled={navigationPreviousDisabled()} onClick={prevQuestion}>\r\n                        <img src={navigationPreviousDisabled() ? backArrowDisabled : backArrow} alt=\"Back Arrow\" />\r\n                      </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <IconButton disabled={navigationForwardDisabled()} onClick={nextQuestion}>\r\n                        <img src={navigationForwardDisabled() ? forwardArrowDisabled : forwardArrow} alt=\"Forward Arrow\" />\r\n                      </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Button \r\n                      variant=\"contained\" \r\n                      onClick={() => {\r\n                          setDialogOpen(true); \r\n                          getTotal(); \r\n                          getPlatform(); \r\n                          getFeatures();\r\n                          getCustomFeatures();\r\n                          getCategory();\r\n                      }} className={classes.estimateButton}>\r\n                      Get Estimate\r\n                    </Button>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)} style={{zIndex: 1302}} fullWidth maxWidth=\"lg\">\r\n                \r\n                <DialogContent style={{overflow: 'none'}}>\r\n                <Grid container justify=\"center\">  \r\n                  <Grid item style={{marginTop: '1em'}}>\r\n                      <Typography variant=\"h2\" align=\"center\">\r\n                        Estimate\r\n                      </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                  <Grid container justify=\"space-evenly\">\r\n                    <Grid item container direction=\"column\" md={7} style={{maxWidth: '20em', marginBottom: '1em'}}>\r\n                          <Grid item style={{marginBottom: '0.5em'}}>\r\n                                <TextField \r\n                                label=\"Name\" \r\n                                fullWidth \r\n                                id=\"Name\" \r\n                                value={name} \r\n                                onChange={(e) => onNameChangeHandler(e)}/>\r\n                            </Grid>\r\n                            <Grid item style={{marginBottom: '0.5em'}}>\r\n                                <TextField \r\n                                label=\"Email\" \r\n                                error={emailHelper.length !== 0} \r\n                                helperText = {emailHelper}\r\n                                fullWidth id=\"email\" \r\n                                value={email} \r\n                                onChange={(e) => onChange(e)}/>\r\n                            </Grid>\r\n                            <Grid item style={{marginBottom: '0.5em'}}>\r\n                            <TextField \r\n                                label=\"Phone\" \r\n                                error={phoneHelper.length !== 0} \r\n                                helperText = {phoneHelper}\r\n                                fullWidth id=\"phone\" \r\n                                value={phone} \r\n                                onChange={(e) => onChange(e)}/>\r\n                            </Grid>\r\n                            <Grid item style={{Width: matchesSM ? '100%' : \"20em\"}}>\r\n                              <TextField value={message} multiline rows={10} \r\n                              id=\"message\" onChange={(e) => onMessageChangeHandler(e)} \r\n                              className={classes.Message} fullWidth\r\n                              InputProps={{disableUnderline: true}}\r\n                              style={{marginTop: '2em'}}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item container direction=\"column\" md={5} style={{maxWidth: '30em'}}>\r\n                          <Grid item>\r\n                            {questions.length > 2 ? softwareSelection : websiteSelection}\r\n                          </Grid>\r\n                          <Grid item>\r\n                              <Typography variant=\"body1\" paragraph>\r\n                                We can create this digital solution for an estimated : <span className={classes.specialText}>${total.toFixed(2)}</span>\r\n                              </Typography>\r\n                              <Typography variant=\"body1\" paragraph>\r\n                                Fill out your name, phone number and email, place your request, and we'll get back to you with details moving forward and a final price.\r\n                              </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant=\"contained\" className={classes.estimateButton}>\r\n                              Place Request\r\n                              <img src={send} alt=\"paper airplane\" style={{marginLeft: '0.5em'}} />  \r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                  </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}